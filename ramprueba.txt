library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;

entity ram_contrasenas is
	port(data: in std_logic_vector(4 downto 0);
	add: in std_logic_vector(5 downto 0);
	modo: in std_logic;
	q: out std_logic_vector(4 downto 0));
end ram_contrasenas;
architecture sol of ram_contrasenas is
signal r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,cualquiera: std_logic_vector(4 downto 0);
signal r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,: std_logic_vector(4 downto 0);
signal r20,r21,r22,r23,r24,r25,r26,r27,r28,r29,: std_logic_vector(4 downto 0);
signal r30,r31,r32,r33,r34,r35,r36,r37,r38,r39,: std_logic_vector(4 downto 0);
signal r40,r41,r42,r43,r44,r45,r46,r47,r48,r49,: std_logic_vector(4 downto 0);
begin
		process(modo,add)
			begin
				if modo='1' then --escritura
					case add is
						when "000000" => r0<=data;
						when "000001" => r1<=data;
						when "000010" => r2<=data;
						when "000011" => r3<=data;
						when "000100" => r4<=data;
						when "000101" => r5<=data;
						when "000110" => r6<=data;
						when "000111" => r7<=data;
						when "001000" => r8<=data;
						when "001001" => r9<=data;
						when "001010" => r10<=data;
						when "001011" => r11<=data;
						when "001100" => r12<=data;
						when "001101" => r13<=data;
						when "001110" => r14<=data;
						when "001111" => r15<=data;
						when "010000" => r16<=data;
						when "010001" => r17<=data;
						when "010010" => r18<=data;
						when "010011" => r19<=data;
						when "010100" => r20<=data;
						when "010101" => r21<=data;
						when "010110" => r22<=data;
						when "010111" => r23<=data;
						when "011000" => r24<=data;
						when "011001" => r25<=data;
						when "011010" => r26<=data;
						when "011011" => r27<=data;
						when "011100" => r28<=data;
						when "011101" => r29<=data;
						when "011110" => r30<=data;
						when "011111" => r31<=data;
						when "100000" => r32<=data;
						when "100001" => r33<=data;
						when "100010" => r34<=data;
						when "100011" => r35<=data;
						when "100100" => r36<=data;
						when "100101" => r37<=data;
						when "100110" => r38<=data;
						when "100111" => r39<=data;
						when "101000" => r40<=data;
						when "101001" => r41<=data;
						when "101010" => r42<=data;
						when "101011" => r43<=data;
						when "101100" => r44<=data;
						when "101101" => r45<=data;
						when "101110" => r46<=data;
						when "101111" => r47<=data;
						when "110000" => r48<=data;
						when "110001" => r49<=data;
						when others => cualquiera<="000000";
					end case;
				
				else
					case add is--lectura
						when "000000" => q<=r0;
						when "000001" => q<=r0;
						when "000010" => q<=r0;
						when "000011" => q<=r0;
						when "000100" => q<=r0;
						when "000101" => q<=r0;
						when "000110" => q<=r0;
						when "000111" => q<=r0;
						when "001000" => q<=r0;
						when "001001" => q<=r0;
						when "001010" => q<=r0;
						when "001011" => q<=r0;
						when "001100" => q<=r0;
						when "001101" => q<=r0;
						when "001110" => q<=r0;
						when "001111" => q<=r0;
						when "010000" => q<=r0;
						when "010001" => q<=r0;
						when "010010" => q<=r0;
						when "010011" => q<=r0;
						when "010100" => q<=r0;
						when "010101" => q<=r0;
						when "010110" => q<=r0;
						when "010111" => q<=r0;
						when "011000" => q<=r0;
						when "011001" => q<=r0;
						when "011010" => q<=r0;
						when "011011" => q<=r0;
						when "011100" => q<=r0;
						when "011101" => r29<=data;
						when "011110" => r30<=data;
						when "011111" => r31<=data;
						when "100000" => r32<=data;
						when "100001" => r33<=data;
						when "100010" => r34<=data;
						when "100011" => r35<=data;
						when "100100" => r36<=data;
						when "100101" => r37<=data;
						when "100110" => r38<=data;
						when "100111" => r39<=data;
						when "101000" => r40<=data;
						when "101001" => r41<=data;
						when "101010" => r42<=data;
						when "101011" => r43<=data;
						when "101100" => r44<=data;
						when "101101" => r45<=data;
						when "101110" => r46<=data;
						when "101111" => r47<=data;
						when "110000" => r48<=data;
						when "110001" => r49<=data;
						when others => cualquiera<="000000";
					end case;
				end if;
	end process;
end sol;